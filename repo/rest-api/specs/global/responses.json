{
	"Error": {
		"type": "object",
		"properties": {
			"code": { "type": "string" },
			"message": { "type": "string" }
		},
		"required": [ "code", "message" ]
	},
	"NotFound": {
		"description": "The specified resource was not found",
		"content": {
			"application/json": {
				"schema": { "$ref": "#/Error" },
				"examples": {
					"item-not-found": {
						"value": {
							"code": "item-not-found",
							"message": "Could not find an item with the ID: {item_id}"
						}
					},
					"statement-not-found": {
						"value": {
							"code": "statement-not-found",
							"message": "Could not find a statement with the ID: {statement_id}"
						}
					}
				}
			}
		},
		"headers": {
			"Content-Language": {
				"schema": {
					"type": "string"
				},
				"description": "Language code of the language in which error message is provided"
			}
		}
	},
	"InvalidInput": {
		"description": "The request cannot be processed",
		"content": {
			"application/json": {
				"schema": { "$ref": "#/Error" },
				"examples": {
					"invalid-item-id": {
						"value": {
							"code": "invalid-item-id",
							"message": "Not a valid item ID: {item_id}"
						}
					},
					"invalid-statement-id": {
						"value": {
							"code": "invalid-statement-id",
							"message": "Not a valid statement ID: {statement_id}"
						}
					},
					"invalid-field": {
						"value": {
							"code": "invalid-field",
							"message": "Not a valid field: {field}"
						}
					}
				}
			}
		},
		"headers": {
			"Content-Language": {
				"schema": {
					"type": "string"
				},
				"description": "Language code of the language in which error message is provided"
			}
		}
	},
	"UnexpectedError": {
		"description": "An unexpected error has occurred",
		"content": {
			"application/json": {
				"schema": { "$ref": "#/Error" },
				"example": {
					"code": "unexpected-error",
					"message": "Unexpected Error"
				}
			}
		},
		"headers": {
			"Content-Language": {
				"schema": {
					"type": "string"
				},
				"description": "Language code of the language in which error message is provided"
			}
		}
	},
	"Item": {
		"description": "A single Wikibase Item",
		"headers": {
			"Last-Modified": {
				"schema": {
					"type": "string"
				},
				"description": "Last modified date"
			},
			"ETag": {
				"schema": {
					"type": "string"
				},
				"description": "Last entity revision number"
			},
			"X-Authenticated-User": {
				"schema": {
					"type": "string"
				},
				"description": "Optional username of the user making the request"
			}
		},
		"content": {
			"application/json": {
				"schema": { "$ref": "./schemas.json#/Item" }
			}
		}
	},
	"Statement": {
		"description": "A single Wikibase Statement. Please note that the value of the `ETag` header field refers to the entity's revision ID.",
		"headers": {
			"Last-Modified": {
				"schema": {
					"type": "string"
				},
				"description": "Last modified date"
			},
			"ETag": {
				"schema": {
					"type": "string"
				},
				"description": "Last entity revision number"
			},
			"X-Authenticated-User": {
				"schema": {
					"type": "string"
				},
				"description": "Optional username of the user making the request"
			}
		},
		"content": {
			"application/json": {
				"schema": { "$ref": "./schemas.json#/Statement" }
			}
		}
	},
	"Statements": {
		"description": "The statements of an Item",
		"headers": {
			"Last-Modified": {
				"schema": {
					"type": "string"
				},
				"description": "Last modified date"
			},
			"ETag": {
				"schema": {
					"type": "string"
				},
				"description": "Last entity revision number"
			},
			"X-Authenticated-User": {
				"schema": {
					"type": "string"
				},
				"description": "Optional username of the user making the request"
			}
		},
		"content": {
			"application/json": {
				"schema": { "$ref": "./schemas.json#/Statements" }
			}
		}
	},
	"NotModified": {
		"description": "The specified resource has not been modified since last provided revision number or date",
		"headers": {
			"ETag": {
				"schema": {
					"type": "string"
				},
				"description": "Last entity revision number"
			}
		}
	},
	"Moved": {
		"description": "The specified resource has permanently moved to the indicated location",
		"headers": {
			"Location": {
				"schema": {
					"type": "string"
				},
				"description": "The URL to which the requested resource has been moved to"
			}
		}
	}
}
